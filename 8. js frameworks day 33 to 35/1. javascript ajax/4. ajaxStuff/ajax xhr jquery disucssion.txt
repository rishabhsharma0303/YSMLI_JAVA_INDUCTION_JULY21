AJAX
______

What is AJAX?
________________

	=> AJAX is the art of exchanging data with the server  and updating 
		part of web pages-without reloading the whole page asynchronously 


Key technologies involved?
______________________

	JavaScript	:that allows for interaction with the browser and responding to events.

	DOM		:for accessing and manipulating the structure of the HTML of the page.
	
	XML		:which represents the data passed between the server and client. 
	
	An XMLHttpRequest :object for asynchronously exchanging the XML data between the client and the server
		xhr
	
AJAX process?
___________
	
Steps:
	html: Gives ids to input elements that will be read by script

	1. Define an object for sending HTTP requests
	2. Initiate request
	3. Get request object
		Designate a request handler function

		Supply as onreadystatechange attribute of request

		Initiate a GET or POST request to a JSP page

	4. Send data

	5. Handle response

	6. Wait for readyState of 4 and HTTP status of 200

	7. Extract return text with responseText or responseXML, Do something with result





AJAX hello World
_______________

	index.html
	------------

	<button onclick="load('loadhere','foo.jsp')">load ajax contents</button>
	<div id="loadhere"></div>

	<script type="text/javascript" src="demo.js"></script>


	foo.jsp
	---------
		<%= new java.util.Date() %>

	demo.js
	--------
	function load(id, url){
	
	var ajaxObject=new XMLHttpRequest(); 
	 
	 if(ajaxObject!=null){ 
		 ajaxObject.open("GET",url,true);
		 ajaxObject.send(null);
	 }
	 else{
		 alert("Not having suitable browser ...");
	 }
	 
	ajaxObject.onreadystatechange=function(){
		if(ajaxObject.readyState==4 && ajaxObject.status==200){
			document.getElementById(id).innerHTML=ajaxObject.responseText;
		}
	};

      }





AJAX hello World with servlet:
_____________________________
Servlet

public class ShowTime extends HttpServlet {
	@Override
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		response.setHeader("Cache-Control", "no-cache");
		response.setHeader("Pragma", "no-cache");
		PrintWriter out = response.getWriter();
		Date currentTime = new Date();
		String message = String.format("It is now %tr on %tD.", currentTime,
				currentTime);
		out.print(message);
	}
}


index.html
---------------

	<input type="button" value="Show Server Time"
		onclick='ajaxResult("show-time", "timeResult1")' />
	<div id="timeResult1" class="ajaxResult"></div>


lib vs framework
________________


jQuery
__________

the prime purpose of jQuery 
is simplification of DOM processing.

jQuery is JS

jQuery is a fast and concise JavaScript Library that 
simplifies HTML document traversing, event handling, 
animating, and Ajax interactions for rapid web development. 


jQuery is designed to change the way that 
you write JavaScript.


 jQuery Syntax looks like this
_______________________________
 $('selector').action()

 there are three main types of selectors in jQuery 
     1. element selector
     2. id selector
     3. class selector

     1. Element selector -  This is an example of element selector which clicks on all p
     $('p').click();

     2. Id selector - this is an example of id selector
     $('#second').click();

     3. Class selector - this is an example of id selector
     $('.odd').click();

     other selectors
     $('*').click() // clicks on all the elements
     $('p.odd').click() // clicks on all the elements
     $('p:first').click() // clicks on all the elements







<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
</head>

<body>
    <p class='odd'>this is my body1</p>
    <p id='second'>this is my body2</p>
    <p class='odd'>this is my body3</p>

</body>
<script src="js/jquery-3.3.1.min.js"></script>
<script src="js/myjQuery.js"></script>
</html>


Ex:




<!DOCTYPE html>
<html>
<head>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js">
</script>

<script>
$(document).ready(function(){
  $("p").click(function(){
    $(this).hide();
  });
});
</script>
</head>
<body>
<p>If you click on me, I will disappear.</p>
<p>Click me away!</p>
<p>Click me too!</p>
</body>
</html>





AJAX example with jQuery:
--------------------


<!DOCTYPE html>
<html>
<head>
<script src="........"></script>

<script>
$(document).ready(function(){
    $("button").click(function(){
        $("#div1").load("demo_test.txt");
    });
});
</script>
</head>
<body>

<div id="div1"><h2>Let jQuery AJAX Change This Text</h2></div>

<button>Get External Content</button>


Note:
-----
 jQuery load() method is a powerful AJAX method

 What it does?
 --------------
	$(selector).load(URL,data,callback);

	The load() method loads data from a server and puts the returned data into the selected element.

	$("#div1").load("demo_test.txt");



 Much better code:
 ----------------
$("button").click(function(){
    $("#div1").load("demo_test.txt", function(responseTxt, statusTxt, xhr){
        if(statusTxt == "success")
            alert("External content loaded successfully!");
        if(statusTxt == "error")
            alert("Error: " + xhr.status + ": " + xhr.statusText);
    });
});



 get from server:
 ------------

$("button").click(function(){
    $.get("demo_test.asp", function(data, status){
        alert("Data: " + data + "\nStatus: " + status);
    });
});


fetching json and printing
-----------------------------
<body>

	<ul></ul>

	<button>Users</button>

	<script src="jquery-3.1.1.js" type="text/javascript"></script>
	<script src="my_script.js" type="text/javascript"></script>
</body>


json_data.json
---------------
{
   "p1": { 
           "name": "Satish",
		          "age":   25,
		          "company": "hcl"
         },
 
 
   "p2": {
           "name": "Kiran",
		          "age":   28,
		          "company": "blackrock"   
         }			 		 		 
}

my_script.js
---------------
$("button").click( function() {
 $.getJSON( "json_data.json", function(obj) { 
  $.each(obj, function(key, value) { 
         $("ul").append("<li>"+value.name+"</li>");
  });
 });
});



http://www.w3schools.com/jquery/jquery_ajax_intro.asp

















Ajax spring boot with jQuery hello world:
____________________________________________

<!DOCTYPE html>
<html>
<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function(event){
            $("#name").keyup(function(e){
                var enteredName=$("#name").val();
                $.ajax({
                    type:'GET',
                    url: 'hello',
                    data: "name="+enteredName,
                    success: function(result){
                        $("#respDiv").html(result);
                    },
                    error: function(){
                        alert('error occured');
                    }
                })
            })
        })
    </script>
</head>
<body>
    <form>
        Enter name: <input type="text" name="name" id="name"/><br>
    </form>
    
    Response <br>
    <div id="respDiv"></div>
    
    
</body>
</html>



controller:
___________
@Controller
public class Hello {

	@GetMapping(path = "/")
	public String index() {
		return "index";
	}
	
	@GetMapping(path = "/hello")
	public @ResponseBody  String hello(@RequestParam(name = "name")String name) {
		System.out.println("hello ..."+name);
		return "hello"+ name;
	}
}






@Repository("registerUserRepository")
public interface UserRepository extendsJpaRepository<User,Long> {

     @Query("Select u from User u where u.name like %:name%")
     List<User> findUser(@Param("name")String name);
}




<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
    <div id="load"></div>
    <script>

        $(document).ready(function(){
            $.ajax({
                url:"http://localhost:8080/empapp/employee",
                type: "GET",
                success: function(data){
                    $.each(data, function(key, value){
                        $("#load").append(value.id+" "+ value.name+" "+ value.age+"<br>")
                    })
                }
            })
        })
    </script>
</body>
</html>

