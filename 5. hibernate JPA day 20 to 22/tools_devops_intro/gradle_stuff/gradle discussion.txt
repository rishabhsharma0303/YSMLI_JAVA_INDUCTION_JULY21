What is Gradle ?
---------------
	Gradle is completely an open-source build automation tool 
	that is based on Apache build tools Maven and Ant.

	It introduces a  Kotlin and Groovy-based DSL(Domain Specific Language)
	instead of XML (Extensible Markup Language) for declaring the project configuration. 

	Gradle facilitates an elastic model that helps us in the development lifecycle
	 from compiling and packaging source code for web and mobile-based applications.

	It provides support to build, test, and deploy software on different platforms. 
	Gradle is developed to build automation on many programming languages and platforms, including Java, Android, 		Scala / C ++, and Groovy. Gradle can be integrated with several development tools and servers, including Eclipse, 	 Jenkins, and Android Studio.

	LinkedIn, Google, and Netflix use Gradle


Key features of gradle:
-------------------
	Gradle is declarative 
	gradel having life cycle similer to maven
	gradle works with multipe repo like maven, ivy, google etc
	gradle have incremental build process
	give standad dir structure
	gradle cache feature give lots of reusability of plugins jar etc
	easy to develop multi module project
	convert maven to gradle project
	integration with multiple ides
	no need to write build script in xml ...we can use groovy (DSL)

Customized build tool:
------------------
	Gradle allow to write build script in different languages like groovy,kotlin etc
	it can be used for diff jvm based languages like java, scala kotlin

Fast
----
	better performance then maven
	use incremental build process
	give gradle caching concept to reuse jars, plugins etc

powerful
--------
	so many facilities to make build process easy like gradlew (gradle wrapper)
	to use gradle without installing it
	Ability to work with multiple repo to get jars




















 
Why Gradle ?
--------
	Free and open-source
      	 	Gradle is a completely open-source project and licensed under the Apache Software License (ASL).

	High Performance
        	 Gradle very quickly executes the task by reusing the output from the previous task execution and it also 			processes tasks whose only input is changed and executes the task in parallel.

	Highly Customizable
         	Highly customizable and extensible.

	Performance
       		Faster than Maven in all scenarios including large builds using build-cache.

	Flexibility
       		It is a flexible tool. Gradle is a plug-in-based build tool.
      	 	It creates our plug-in in a different programming language
      		 It creates a plug-in and gives control to our codebase.

	Multi-project build support
        	Powerful support for the multi-project builds

	Extensibility
      		Gradle can be easily extended to provide our task types or build models.

	Incremental Builds
         	If we compile our source code using Gradle then it will check if the sources have changed since the 			previous execution. 

		If the code is modified or changed then it will be executed but if the code is not changed 
		or modified then it will skip the execution and the task is marked as updated.

	Familiar with the Java
	     You need a Java Virtual Machine (JVM) to run the Gradle, so your machine should have a Java Development Kit 			(JDK). Bonus for developers as we can use the standard Java APIs in our build logic

	Gradle Wrapper 
        	Gradle Wrapper usually allows us to execute Gradle builds on machines where Gradle is not installed.




commands:
---------
gradle init
gradle build
gradle run
gradle task
gradle task --all
gradle -q mytask




task myTask{
	description='hello world taks'
	doLast{
	println 'welcome to hello world taks'
	}
}



